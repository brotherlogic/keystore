syntax = "proto3";

package keystore;

import "github.com/golang/protobuf/ptypes/any/any.proto";

option go_package = "github.com/brotherlogic/keystore/proto";

message Empty {}

message DeleteObject{
  int64 deletes = 1;
}

message FileMeta {
  int64 version = 1;
  string key = 2;
}

message SaveRequest {
  string key = 1;
  google.protobuf.Any value = 2;
  int64 write_version = 3;
  StoreMeta meta = 4;
  string origin = 5;
}

message ReadRequest {
  string key = 1;
}

message StoreMeta {
  int64 version = 1;
  repeated string deleted_keys = 2;
}

message ReadResponse {
  google.protobuf.Any payload = 1;
  int64 read_time = 2;
}

message GetDirectoryRequest {
	// Empty for now
}

message GetDirectoryResponse {
  repeated FileMeta keys = 1;
  int64 version = 2;
}

enum State {
  SOFT_SYNC = 0;
  HARD_SYNC = 1;
  MASTER = 2;
}

message DeleteRequest {
  string key = 1;
}

message DeleteResponse {}

service KeyStoreService {
  rpc Save (SaveRequest) returns (Empty) {};
  rpc Read (ReadRequest) returns (ReadResponse) {};
  rpc GetMeta (Empty) returns (StoreMeta) {};
  rpc GetDirectory(GetDirectoryRequest) returns (GetDirectoryResponse) {};
  rpc Delete (DeleteRequest) returns (DeleteResponse) {};
}
