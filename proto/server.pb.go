// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package keystore is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	Empty
	SaveRequest
	ReadRequest
*/
package keystore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SaveRequest struct {
	Key   string               `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *google_protobuf.Any `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SaveRequest) Reset()                    { *m = SaveRequest{} }
func (m *SaveRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()               {}
func (*SaveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SaveRequest) GetValue() *google_protobuf.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type ReadRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Empty)(nil), "keystore.Empty")
	proto.RegisterType((*SaveRequest)(nil), "keystore.SaveRequest")
	proto.RegisterType((*ReadRequest)(nil), "keystore.ReadRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for KeyStoreService service

type KeyStoreServiceClient interface {
	Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*Empty, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*google_protobuf.Any, error)
}

type keyStoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeyStoreServiceClient(cc *grpc.ClientConn) KeyStoreServiceClient {
	return &keyStoreServiceClient{cc}
}

func (c *keyStoreServiceClient) Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/keystore.KeyStoreService/Save", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyStoreServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*google_protobuf.Any, error) {
	out := new(google_protobuf.Any)
	err := grpc.Invoke(ctx, "/keystore.KeyStoreService/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KeyStoreService service

type KeyStoreServiceServer interface {
	Save(context.Context, *SaveRequest) (*Empty, error)
	Read(context.Context, *ReadRequest) (*google_protobuf.Any, error)
}

func RegisterKeyStoreServiceServer(s *grpc.Server, srv KeyStoreServiceServer) {
	s.RegisterService(&_KeyStoreService_serviceDesc, srv)
}

func _KeyStoreService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyStoreServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keystore.KeyStoreService/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyStoreServiceServer).Save(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyStoreService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyStoreServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keystore.KeyStoreService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyStoreServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyStoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "keystore.KeyStoreService",
	HandlerType: (*KeyStoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _KeyStoreService_Save_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _KeyStoreService_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x4e, 0xad, 0x2c, 0x2e, 0xc9,
	0x2f, 0x4a, 0x95, 0x92, 0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x27, 0x95, 0xa6,
	0xe9, 0x27, 0xe6, 0x55, 0x42, 0x14, 0x29, 0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x2a,
	0x79, 0x73, 0x71, 0x07, 0x27, 0x96, 0xa5, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09,
	0x70, 0x31, 0x67, 0xa7, 0x56, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x42, 0x5a,
	0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x22, 0x7a,
	0x10, 0x43, 0xf5, 0x60, 0x86, 0xea, 0x39, 0xe6, 0x55, 0x06, 0x41, 0x94, 0x28, 0xc9, 0x73, 0x71,
	0x07, 0xa5, 0x26, 0xa6, 0xe0, 0x34, 0xcc, 0xa8, 0x8a, 0x8b, 0xdf, 0x3b, 0xb5, 0x32, 0x18, 0xe4,
	0xba, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x03, 0x2e, 0x16, 0x90, 0x03, 0x84, 0x44,
	0xf5, 0x60, 0xee, 0xd6, 0x43, 0x72, 0x90, 0x14, 0x3f, 0x42, 0x18, 0xe2, 0x60, 0x06, 0x21, 0x53,
	0x2e, 0x16, 0x90, 0x2d, 0xc8, 0x3a, 0x90, 0x6c, 0x95, 0xc2, 0xea, 0x42, 0x25, 0x86, 0x24, 0x36,
	0x30, 0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xef, 0x82, 0x89, 0x2e, 0x01, 0x00, 0x00,
}
